
#include "../recoil_common_includes.h"
#include "../factories_common.h"

piece  base, plat1,plat2,tower,nc1,nc2,towercover,nano2,beam1,beam2,beam3,beam4,nano1,nano3,nano4,nc3,nc4,nanotower3,nanotower4,pad,blink;
static-var  activationState, spray;
static-var  Stunned;

// Signal definitions
#define SIGNAL_TURNON 4


#define WATER_ROCK_UNITSIZE 20
// Otherwise it wont move up!
#define WATER_ROCK_FREQ_Y 0
#include "../floatmotion.h"

#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 7
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

RadarOn()
{
	while( TRUE )
	{
	    if (!Stunned) {
	    	if( get ACTIVATION )
				{
					emit-sfx 1024 + 0 from blink;
				}	    
		}
		sleep 2500;
	}
}


Create()
{
	hide pad;
	hide beam4;
	hide beam3;
	hide beam1;
	hide beam2;

	set ARMORED to 1;
	activationState = 0;
	spray = 0;
	move base to y-axis [2.500000] now;
	SLEEP_UNTIL_UNITFINISHED;
	move base to y-axis [0.0] speed [5.0];
	start-script FloatMotion();
	start-script RadarOn();
}

QueryNanoPiece(pieceIndex)
{
	spray = (spray + 1) % 3;
	pieceIndex = beam1 + spray;
}

Activate()
{
	if( activationState )
	{
		set ACTIVATION to 0;
		return (0);
	}
	show blink;
	set ACTIVATION to 100;
	
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	move base to y-axis [37] speed [17.5];
	turn towercover to x-axis <-90> speed <90>;
	turn plat1 to x-axis <90> speed <45>;
	turn plat2 to x-axis <-90> speed <45>;
	move nanotower3 to y-axis [4.5] speed [4.5];
	move nanotower4 to y-axis [4.5] speed [4.5];
	wait-for-turn towercover around x-axis;
	
	move tower to y-axis [26] speed [26];
	move nc1 to z-axis [-7.5] speed [7.5];
	move nc2 to z-axis [7.5] speed [7.5];
	wait-for-move tower along y-axis;
	
	turn nc3 to z-axis <-90> speed <90>;
	turn nc4 to z-axis <-90> speed <90>;
	wait-for-turn nc4 around z-axis;
	
	FACTORY_OPEN_BUILD;
}

Deactivate()
{
	if( get ACTIVATION )
	{
		activationState = 1;
	}
	if( activationState )
	{
		set ACTIVATION to 0;
		activationState = 0;
	}
	hide blink;
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	
	move base to y-axis [0] speed [17.5];
	move tower to y-axis [0] speed [26];
	wait-for-move tower along y-axis;
	turn plat1 to x-axis <0> speed <45>;
	turn plat2 to x-axis <0> speed <45>;
	turn nc3 to z-axis <0> speed <90>;
	turn nc4 to z-axis <0> speed <90>;
	wait-for-turn nc4 around z-axis;
	
	turn towercover to x-axis <0> speed <90>;
	wait-for-turn towercover around x-axis;
	
	move nc1 to z-axis [0] speed [7.5];
	move nc2 to z-axis [0] speed [7.5];
	move nanotower3 to y-axis [0] speed [4.5];
	move nanotower4 to y-axis [0] speed [4.5];
	
	FACTORY_CLOSE_BUILD;
}

StartBuilding()
{
	show beam1;
	show beam2;
	show beam3;
	show beam4;
	spin pad around y-axis speed <30> accelerate <1>;
}

StopBuilding()
{
	hide beam1;
	hide beam2;
	hide beam3;
	hide beam4;
	stop-spin pad around y-axis decelerate <1>;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode plat1 type BITMAPONLY | NOHEATCLOUD;
		explode plat2 type BITMAPONLY | NOHEATCLOUD;
		explode tower type BITMAPONLY | NOHEATCLOUD;
		explode nc1 type BITMAPONLY | NOHEATCLOUD;
		explode nc2 type BITMAPONLY | NOHEATCLOUD;
		explode towercover type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode beam2 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode beam1 type BITMAPONLY | NOHEATCLOUD;
		explode nanotower3 type BITMAPONLY | NOHEATCLOUD;
		explode nc3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type BITMAPONLY | NOHEATCLOUD;
		explode beam3 type BITMAPONLY | NOHEATCLOUD;
		explode nanotower4 type BITMAPONLY | NOHEATCLOUD;
		explode nano4 type BITMAPONLY | NOHEATCLOUD;
		explode beam4 type BITMAPONLY | NOHEATCLOUD;
		explode nc4 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode plat1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode plat2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode tower type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc1 type FALL | NOHEATCLOUD;
		explode nc2 type FALL | NOHEATCLOUD;
		explode towercover type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanotower3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type FALL | NOHEATCLOUD;
		explode beam3 type FALL | NOHEATCLOUD;
		explode nanotower4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type FALL | NOHEATCLOUD;
		explode nc4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode plat1 type SMOKE | FALL | NOHEATCLOUD;
		explode plat2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode tower type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode towercover type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanotower3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc3 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanotower4 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano4 type SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc4 type SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode plat1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode plat2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode tower type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nc1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nc2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode towercover type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode beam1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nanotower3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nc3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanotower4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam4 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nc4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
